#! /bin/env python

import sys
import optparse
import urlparse

from cmt import HTMLBlock, MissingEndTag

usage = "usage: %prog [options] URL1 [URL2 ...]"

parser = optparse.OptionParser (usage=usage, version="%prog 0.1")
parser.add_option ("-t", "--tag", dest="tag",
                   help="HTML tag to scrape",
                   default='div')
parser.add_option ("-a", "--attr", dest="attr",
                   help="Filter tags by attribute",
                   default=None)
parser.add_option ("-v", "--value", dest="value",
                   help="Filter tags by attribute value",
                   default=None)
parser.add_option ('', '--cmt-doc', dest="cmt_doc",
                   help="Get a CMT doc block (implies --tag=div --attr=id --value=CMT_DOC )",
                   default=False, action="store_true")
parser.add_option ('', "--link-prefix", dest="link_prefix",
                   help="Prefix internal links with PREFIX.",
                   default=None)

(options, args) = parser.parse_args ()

if options.cmt_doc:
  tag = 'div'
  attr = 'id'
  value = 'CMT_DOC'
  link_prefix = 'http://csdms.colorado.edu'
else:
  tag = options.tag
  attr = options.attr
  value = options.value
  link_prefix = options.link_prefix

for arg in args:
  url = urlparse.urlparse (arg)
  if url.scheme == '':
    urls = []
    with open (url.path, 'r') as f:
      for line in f:
        urls.append (line)
  else:
    urls = [arg]

  for url in urls:
    try:
      p = HTMLBlock (url, tag=tag, attr=(attr, value), link_prefix=link_prefix)
      p.to_file (sys.stdout)
      p.close ()
    except MissingEndTag as e:
      print '%s: %s' % (url.strip (), e)

